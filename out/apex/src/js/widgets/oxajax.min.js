!function ($) {
    oxAjax = {
        loadingScreen: {
            start: function (a, b) {
                var c = Array();
                return $(a).each(function () {
                    var a = document.createElement("div");
                    if (a.innerHTML = '<div class="loadingfade"></div><div class="loadingicon"></div><div class="loadingiconbg"></div>', $("div", a).css({
                        position: "absolute",
                        left: $(this).offset().left - 10,
                        top: $(this).offset().top - 10,
                        width: $(this).width() + 20,
                        height: $(this).height() + 20
                    }), b && b.length) {
                        var d = Math.round(b.offset().left - 10 - $(this).offset().left + b.width() / 2),
                            e = b.offset().top,
                            f = Math.round(e - 10 - $(this).offset().top + (b.last().offset().top - e + b.last().height()) / 2);
                        $("div.loadingiconbg, div.loadingicon", a).css({"background-position": d + "px " + f + "px"})
                    }
                    $("div.loadingfade", a).css({opacity: 0}).animate({opacity: .55}, 200), $("body").append(a), c.push(a)
                }), c
            }, stop: function (a) {
                $.each(a, function (a, b) {
                    $("div", b).not(".loadingfade").remove(), $("div.loadingfade", b).stop(!0, !0).animate({opacity: 0}, 100, function () {
                        $(b).remove()
                    })
                })
            }
        }, updatePageErrors: function (a) {
            if (a.length) {
                var b = $("#content > .status.error");
                if (0 == b.length && ($("#content").prepend("<div class='status error corners'>"), b = $("#content > .status.error")), b) {
                    b.children().remove();
                    var c;
                    for (c = 0; c < a.length; c++) {
                        var d = document.createElement("p");
                        $(d).append(document.createTextNode(a[c])), b.append(d)
                    }
                }
            } else $("#content > .status.error").remove()
        }, ajax: function (a, b) {
            var c = this, d = {}, e = "", f = "";
            "FORM" == a[0].tagName ? ($("input", a).each(function () {
                if ("checkbox" == this.type && !this.checked) return !0;
                d[this.name] = this.value
            }), e = a.attr("action"), f = a.attr("method")) : "A" == a[0].tagName && (e = a.attr("href")), b.additionalData && $.each(b.additionalData, function (a, b) {
                d[a] = b
            });
            var g = {}, h = Array();
            for (var i in d) d.hasOwnProperty(i) && h.push(i);
            h.sort().forEach(function (a) {
                g[a] = d[a]
            });
            var j = null;
            b.targetEl && (j = c.loadingScreen.start(b.targetEl, b.iconPosEl)), f || (f = "get"), jQuery.ajax({
                data: g,
                url: e,
                type: f,
                timeout: 3e4,
                beforeSend: function (a, b) {
                    b.url = b.url.replace("&&", "&")
                },
                error: function (a, d, e) {
                    j && c.loadingScreen.stop(j), b.onError && b.onError(a, d, e)
                },
                success: function (a) {
                    j && c.loadingScreen.stop(j), void 0 != a.debuginfo && a.debuginfo && $("body").append(a.debuginfo), void 0 != a.errors && void 0 != a.errors.default ? c.updatePageErrors(a.errors.default) : c.updatePageErrors([]), b.onSuccess && b.onSuccess(a, d)
                }
            })
        }, reportJSError: function (a) {
            "undefined" != typeof console && void 0 !== console.error && console.error(a)
        }, evalScripts: function (container) {
            var self = this;
            try {
                $("script", container).each(function () {
                    try {
                        if ("" != this.src && 0 == $('body > script[src="' + this.src + '"]').length) return $("body").append(this), document.body.appendChild(this), !0;
                        eval(this.innerHTML)
                    } catch (e) {
                        self.reportJSError(e)
                    }
                    $(this).remove()
                })
            } catch (e) {
                self.reportJSError(e)
            }
        }
    }, $.widget("ui.oxAjax", oxAjax)
}(jQuery);
